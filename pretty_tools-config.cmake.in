# - Config file for the @TARGET_NAME@ package
# It defines the following variables
# PRETTY_TOOLS_INCLUDE_DIRS       - include directory
# PRETTY_TOOLS_LIBS_DIRS       - directory containing libraries
# PRETTY_TOOLS_LIBS         - libraries to link against
include(CMakeFindDependencyMacro)

# 如果想要获取Config阶段的变量，可以使用这个
set(PRETTY_TOOLS_INCLUDE_DIRS "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")
set(PRETTY_TOOLS_LIBS_DIRS "@PACKAGE_CMAKE_INSTALL_LIBDIR@")

# ! 当前版本是将所有的实现文件都编译到一起，以后再考虑分开编译
set(PRETTY_TOOLS_LIBRARIES_SHARED "@EXPORT_LIST_TARGETS_SHARED@")
set(PRETTY_TOOLS_LIBRARIES_STATIC "@EXPORT_LIST_TARGETS_STATIC@")

# 如果你的项目需要依赖其他的库，可以使用下面语句，用法与find_package相同
# find_dependency(MYDEP REQUIRED)

# Any extra setup

# Add the targets file
include("${CMAKE_CURRENT_LIST_DIR}/pretty_tools-targets.cmake")

# ! ============================== YAML-CPP 部分 ==============================
# YAML_CPP_INCLUDE_DIR       - include directory
# YAML_CPP_LIBRARY_DIR       - directory containing libraries
# YAML_CPP_SHARED_LIBS_BUILT - whether we have built shared libraries or not
# YAML_CPP_LIBRARIES         - libraries to link against
set(YAML_CPP_INCLUDE_DIR "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")
set(YAML_CPP_LIBRARY_DIR "@PACKAGE_CMAKE_INSTALL_LIBDIR@")
set(YAML_CPP_LIBRARIES "@PACKAGE_CMAKE_INSTALL_LIBDIR@/libyaml-cpp.a") # libyaml-cpp 并没有写合理的 YAML_CPP_LIBRARIES，这里手动指定一下

# Are we building shared libraries?
set(YAML_CPP_SHARED_LIBS_BUILT @YAML_BUILD_SHARED_LIBS@)
